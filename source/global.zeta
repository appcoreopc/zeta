/**
This source file contains the global definitions available through
other Zeta units.
*/

var print = fun (val)
{
    if $is_int64(val) then
        $print_int64(val)
    else if $is_string(val) then
        $print_string(val)
    else
        assert (false, "unknown value type in print()")
}

var println = fun (val)
{
    print(val)
    print('\n')
}

var readLine = fun ()
{
    //$read_line()
}

var readFile = fun (fileName)
{
    assert ($is_string(fileName), "fileName must be a string")

    //$read_file(fileName)
}

var import = fun ()
{
}

var export = fun (name, value)
{
}

var assert = fun (testVal, errorStr)
{
    if testVal != true then
    {
        print("assertion failed - ")
        println(errorStr)
        $exit(-1)
    }
}

/**
This closure is a dummy function which serves to capture the globally
exported variable. The interpreter pretends that all source code is a
nested function of the function below.
*/
fun()
{
    print
    println
    readLine
    readFile
    import
    export
    assert
}

